# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ttXGAECBiHz9P8tPCQS0lc0OPGNwZb85
"""

import gradio as gr
from transformers import AutoImageProcessor
from transformers import SiglipForImageClassification
from transformers.image_utils import load_image
from PIL import Image
import torch

# Load model and processor
model_name = "prithivMLmods/Hand-Gesture-19"
model = SiglipForImageClassification.from_pretrained(model_name)
processor = AutoImageProcessor.from_pretrained(model_name)

def hand_gesture_classification(image):
    """Predicts the hand gesture category from an image."""
    image = Image.fromarray(image).convert("RGB")
    inputs = processor(images=image, return_tensors="pt")

    with torch.no_grad():
        outputs = model(**inputs)
        logits = outputs.logits
        probs = torch.nn.functional.softmax(logits, dim=1).squeeze().tolist()

    labels = {
        "0": "call",
        "1": "dislike",
        "2": "fist",
        "3": "four",
        "4": "like",
        "5": "mute",
        "6": "no_gesture",
        "7": "ok",
        "8": "one",
        "9": "palm",
        "10": "peace",
        "11": "peace_inverted",
        "12": "rock",
        "13": "stop",
        "14": "stop_inverted",
        "15": "three",
        "16": "three2",
        "17": "two_up",
        "18": "two_up_inverted"
    }
    predictions = {labels[str(i)]: round(probs[i], 3) for i in range(len(probs))}

    return predictions

# Create Gradio interface
iface = gr.Interface(
    fn=hand_gesture_classification,
    inputs=gr.Image(type="numpy"),
    outputs=gr.Label(label="Prediction Scores"),
    title="Hand Gesture Classification",
    description="Upload an image to classify the hand gesture."
)

# Launch the app
if _name_ == "_main_":
    iface.launch()